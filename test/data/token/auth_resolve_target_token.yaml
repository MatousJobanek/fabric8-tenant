---
version: 1
interactions:
- request:
    method: GET
    url: http://authservice/api/token?for=some_valid_openshift_resource&force_pull=false
    headers:
      sub: ["user_foo"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{ 
			"access_token": "an_openshift_token",
			"token_type": "bearer",
			"username": "user_foo"
		}'
- request:
    method: GET
    url: http://authservice/api/token?for=some_invalid_resource&force_pull=false
    headers:
      sub: ["user_foo"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 400 Bad Request
    code: 400
    body: '{
      "errors":[
        { "code":"bad_parameter",
          "detail":"Bad value for parameter ''for'': ''some_valid_openshift_resource'' (expected: ''URL to a github.com or openshift.com resource'')",
          "status":"400",
          "title":"Bad parameter error"
        }
      ]
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=missing_header_resource&force_pull=false
  response:
    status: 401 Unauthorized
    code: 401
    headers:
      error-message: ["error message in header"]
    body: '{
      "errors":[
        { "code":"jwt_security_error",
          "detail":"missing header \"Authorization\"",
          "id":"t/DyvMrf",
          "status":"401",
          "title":"Unauthorized"
        }
      ]
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=missing_token_resource&force_pull=false
    headers:
      sub: ["user_foo"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 401 Unauthorized
    code: 401
    headers:
      WWW-Authenticate: ["LINK url=https://auth.openshift.io/api/token/link?for=https://github.com, description=\"GitHub token is missing. Link GitHub account\""]
    body: '{
      "errors":[
        { "code":"unauthorized_error",
          "detail":"token is missing",
          "id":"t/DyvMrf",
          "status":"401",
          "title":"Unauthorized error"
        }
      ]
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=some_valid_openshift_resource_for_service&force_pull=false
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{ 
			"access_token": "jA0ECQMC5AvXo6Jyrj5g0kcBv6Qp8ZTWCgYD6TESuc2OxSDZ1lic1tmV6g4IcQUBlohjT3gyQX2oTa1bWfNkk8xY6wyPq8CUK3ReOnnDK/yo661f6LXgvA==",
			"token_type": "bearer",
			"username": "tenant_service"
		}'
- request:
    method: GET
    url: http://authservice/api/token?for=get_token&force_pull=false
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 200 OK
    code: 200
    body: '{
               "access_token": "jA0EAwMCaBTkoCVDFLreyUcnmqX5P/EQebBJAGDq5nYXEuCXIy4Eez96U8Y9UBrMMTYf9NNmoEZckQeFx3oRUdJl91Xbv8dYkZVmUwk+UXrNsisefNQTYA==",
               "provider_api_url": "https://api.starter-us-east-2a.openshift.com/",
               "scope": "<unknown>",
               "token_type": "bearer",
               "username": "devtools-sre"
           }'
- request:
    method: GET
    url: http://authservice/api/token?for=some_invalid_resource&force_pull=false
    headers:
      sub: ["tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 400 Bad Request
    code: 400
    body: '{
      "errors":[
        { "code":"bad_parameter",
          "detail":"Bad value for parameter ''for'': ''some_valid_openshift_resource'' (expected: ''URL to a github.com or openshift.com resource'')",
          "status":"400",
          "title":"Bad parameter error"
        }
      ]
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=some_valid_openshift_resource&force_pull=false
  response:
    status: 401 Unauthorized
    code: 401
    body: '{
      "errors":[
        { "code":"jwt_security_error",
          "detail":"missing header \"Authorization\"",
          "id":"t/DyvMrf",
          "status":"401",
          "title":"Unauthorized"
        }
      ]
    }'
- request:
    method: GET
    url: http://authservice/api/token?for=some_valid_openshift_resource&force_pull=false
    headers:
      sub: ["expired_tenant_service"] # will be compared against the `sub` claim in the incoming request's token
  response:
    status: 401 Unauthorized
    code: 401
    body: '{
      "errors":[
        { "code":"error",
          "detail":"cluster token is invalid or expired",
          "id":"t/DyvMrf",
          "status":"401",
          "title":"Unauthorized"
        }
      ]
    }'
- request:
    method: POST
    url: http://authservice/api/token
    body: '{
        "grant_type":"client_credentials",
        "client_id":"c211f1bd-17a7-4f8c-9f80-0917d167889d",
        "client_secret":"tenantsecretNew"
      }'
  response:
    status: 200 OK
    code: 200
    body: '{
               "access_token": "eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0ZW5hbnRfc2VydmljZSJ9.A0RwMutAqJkSgyZS5LIDD8z8uRXvW-PdeRou3bUmgn0d8DU2u1fymARWvfJZ2s5L0yym4x9QUeaQuFGue4XvATF_NAakETHJFPWMoAKj22jJQ4r6fkDy8tseyH5WQ7NkTrngVjlQCVBewb7kFWHD_r74vbV8YxRsFKcvbwyemEJ-s3KRtAT2Tgj6CXnNhytp1r7vxUfa0C9amCpLkbBeUs11C8UhDKIp8HvF1Mh4j5bTxdmnOFCUmYbMlvpNSFrIPfSmhW2vxh6kEXkBVkoR2CUp5ikRNZSUXK6yIguXY1UUWY-oGk64KIjBJGTOzOAO2v_M0yfe_FcVDPiaMEA",
               "token_type": "bearer"
           }'